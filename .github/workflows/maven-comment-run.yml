# This job is to test different maven profiles in sdk branch again Pull Request raised
# This workflow targets Java with Maven execution

name: TestNG SDK Test workflow for Maven on workflow_dispatch

on:
  workflow_dispatch:
    inputs:
      pull_request_branch:
        description: 'The pull request branch to build'
        required: true

jobs:
  comment-run:
#    if: always() && github.event.issue.pull_request && contains(github.event.comment.body, 'RUN_TESTS')
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      max-parallel: 3
      matrix:
        java: [ '8', '11', '17' ]
        os: [ 'macos-latest', 'windows-latest', 'ubuntu-latest' ]
    name: TestNG Repo ${{ matrix.Java }} - ${{ matrix.os }} Sample
    env:
      BROWSERSTACK_USERNAME: ${{ secrets.BROWSERSTACK_USERNAME }}
      BROWSERSTACK_ACCESS_KEY: ${{ secrets.BROWSERSTACK_ACCESS_KEY }}

    steps:
      - uses: actions/github-script@98814c53be79b1d30f795b907e553d8679345975
        id: status-check-in-progress
        with:
          github-token: ${{ github.token }}
          script: |
            const commit_sha = github.sha
            const result = await github.rest.checks.create({
              owner: context.repo.owner,
              repo: context.repo.repo,
              name: 'status-check',
              head_sha: 'ec2ae26641885a17b8e9732619e4198586b71751',
              status: 'in_progress'
            }).catch((err) => ({status: err.status, response: err.response}));
            console.log(`The status-check response : ${result.status} Response : ${JSON.stringify(result.response)}`)
            if (result.status !== 201) {
              console.log('Failed to create check run')
            }
#      - uses: actions/github-script@98814c53be79b1d30f795b907e553d8679345975
#        id: check-membership
#        with:
#          github-token: ${{ github.token }}
#          script: |
#            const creator = context.payload.sender.login
#            const result = await github.rest.teams.getMembershipForUserInOrg({
#              org: context.repo.owner,
#              team_slug: 'asi-devs',
#              username: creator
#            }).catch((err) => ({status: err.status, response: err.response}));
#            console.log(`The comment creator ${creator} membership Status : ${result.status} Response : ${JSON.stringify(result.response)}`)
#            if (result.status !== 200) {
#              core.setFailed('User is not part of the owner team!')
#            }
      - uses: actions/checkout@v3
        with:
          ref: ${{ github.event.inputs.pull_request_branch }}
      - name: Set up Java
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: ${{ matrix.java }}
      - name: Run mvn test
        run: |
          echo ${{ github.job }}
          mvn compile
          mvn test
      - name: Run mvn profile sample-local-test
        run: |
          mvn compile
          mvn test -P sample-local-test
      - name: Run mvn profile sample-test
        run: |
          mvn compile
          mvn test -P sample-test
      - uses: actions/github-script@98814c53be79b1d30f795b907e553d8679345975
        id: status-check-completed
        with:
          github-token: ${{ github.token }}
          script: |
            const commit_sha = github.sha
            const result = await github.rest.checks.create({
            owner: context.repo.owner,
            repo: context.repo.repo,
            name: 'status-check',
            head_sha: 'ec2ae26641885a17b8e9732619e4198586b71751,
            status: 'completed',
            conclusion: job.status
            }).catch((err) => ({status: err.status, response: err.response}));
            console.log(`The status-check response : ${result.status} Response : ${JSON.stringify(result.response)}`)
            if (result.status !== 201) {
              console.log('Failed to create check run')
            }
